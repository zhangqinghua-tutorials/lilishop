# 编译打包、生成Docker镜像并推送到DockerHub上
name: seller-api

# 触发条件
on: workflow_dispatch

# 全局环境变量
env:
  BRANCH: product
  MODULE:  seller-api
  RUN_PORT: 8082
  DOCKERHUB_IMAGE: zhangqinghua/lilishop-seller
# 步骤流程：
jobs:
  release:
    name: Build Project
    runs-on: ubuntu-latest
    outputs:
      download_url: ${{ steps.release_upload.outputs.browser_download_url }}
    steps:
      # 1. 拉取代码
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{env.BRANCH}}                            # 指定分支
      # 2. 配置Java编译环境
      - name: Setup JDK8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # 3. 配置Maven缓存
      - name: Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 4. 使用Maven进行打包编译
      - name: Maven Package
        run: mvn package -Dmaven.test.skip=true
      # 5. 登录DockerHub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: zhangqinghua
          password: 12345678go
      # 6. 构建Docker镜像并推送到DockerHub仓库
      - name: Build and push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./Dockerfile
          tags: ${{env.DOCKERHUB_IMAGE}}:latest
          context: ./
          build-args: |
            MODULE=${{ env.MODULE }}
      - name: Start Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TALKAI_CLUB_SERVER_HOST }}
          port: 22
          username: ${{ secrets.TALKAI_CLUB_SERVER_USERNAME }}
          password: ${{ secrets.TALKAI_CLUB_SERVER_PASSWORD }}
          script: |
            docker pull ${{env.DOCKERHUB_IMAGE}}:latest
            docker stop ${{ env.MODULE }}
            docker rm ${{ env.MODULE }}
            docker run -dit --name ${{ env.MODULE }} -p ${{ env.RUN_PORT }}:80 --restart always ${{env.DOCKERHUB_IMAGE}}:latest